buildscript {
    repositories {
        mavenLocal()
        maven { url "${nexusUrl}/repository/public/" }
        maven { url "http://repo.spring.io/libs-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
    }
}

plugins {
    id 'com.google.cloud.tools.jib' version '1.2.0'
}

apply plugin: 'application'
mainClassName = "${projectMainClass}"


jib {
    from {
        image = 'openjdk:8-alpine'
//        image = 'tomcat:8.5-jre8-alpine'
    }
    to {
        image = "registry.cn-hangzhou.aliyuncs.com/loghub/${projectBaseName}"
        tags = ["${projectVersion}".toString(), 'latest']
    }
    container {
        jvmFlags = ['-Dfile.encoding=utf-8', '-Dspring.profiles.active=k8s', '-Dserver.port=9210']
        mainClass = "${projectMainClass}"
        ports = ['9210']
//        appRoot = '/usr/local/tomcat/webapps/ROOT'
    }
}
if ("$dockerBuild" != 'true') {
    apply plugin: 'war'
}
allprojects {

    group = 'com.ittx'
    version = "$projectVersion"

    ext {
        CYBERTRANS_VERSION = '2.1.18'
        EDI_BASE_VERSION = '1.2.13'
        EDI_ERP_BASE_VERSION = '2.1.30'
    }

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'spring-boot'

    bootRepackage.enabled = false

    repositories {
        mavenLocal()
        maven { url "${nexusUrl}/repository/public/" }
        maven { url "http://repo.spring.io/libs-release" }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: [javadoc, groovydoc]) {
        classifier = 'javadoc'
        from javadoc.destinationDir
        from groovydoc.destinationDir
    }

    artifacts {
//        archives sourcesJar
//        archives javadocJar
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }


    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "${nexusUrl}/repository/releases") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }
                snapshotRepository(url: "${nexusUrl}/repository/snapshots") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }
            }
        }
    }

    dependencies {
//        providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
        compile fileTree(dir: 'libs')
        compile "org.springframework.boot:spring-boot-starter-web"
        compile (group: "com.ittx", name: "cbt-core", version: CYBERTRANS_VERSION, changing: true) {
            exclude group: 'io.projectreactor'
        }
        compile (group: "com.ittx", name: "cbt-mongo", version: CYBERTRANS_VERSION, changing: true) {
            exclude group: 'io.projectreactor'
        }
        compile (group: "com.ittx", name: "cbt-ais", version: CYBERTRANS_VERSION, changing: true) {
            exclude group: 'io.projectreactor'
        }
        compile group: "com.ittx", name: "edi-base", version: EDI_BASE_VERSION, changing: true
        compile group: "com.ittx", name: "edi-erp-base", version: EDI_ERP_BASE_VERSION, changing: true
        compile group: "com.ittx", name: "edi-erp-standard", version: EDI_ERP_BASE_VERSION, changing: true
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.51'
        compile "org.springframework.integration:spring-integration-xml"
        compile 'xom:xom:1.2.5'
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.3",
                "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.3",
                'org.mongodb:mongo-java-driver:3.2.2',
                "io.projectreactor:reactor-bus:2.5.1.RELEASE",
                "io.projectreactor:reactor-ipc:2.5.0.RELEASE",
                "io.projectreactor:reactor-core:2.5.0.M4"
        compile "org.apache.axis:axis:1.4"
        compile "javax.xml:jaxrpc-api:1.1"
        compile "wsdl4j:wsdl4j:1.6.3"
        compile "commons-logging:commons-logging:1.2"
        compile "commons-discovery:commons-discovery:0.5"
        compile "commons-net:commons-net:3.6"
        compile "org.apache.commons:commons-pool2:2.4.2"
        compile "org.codehaus.jackson:jackson-mapper-asl:1.9.2"
        

        testCompile 'junit:junit'
        testCompile "org.springframework.boot:spring-boot-starter-test"
    }

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    idea {
        module {
            downloadSources = true
        }
    }
}

idea {
    module {
        sourceDirs += file('cbt-server/cbt-core/src/main/groovy')
        sourceDirs += file('cbt-server/cbt-core/src/main/java')
    }
}
